{
    "docno": "RJP513",
    "url": "https://developer.twitter.com/docs/basics/authentication/guides/log-in-with-twitter",
    "text": "\n \n \n \n Log in with Twitter | Docs | Twitter Developer Platform   \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Authentication \n \n \n \n \n Overview \n \n \n Guides \n \n \n OAuth 1.0a \n \n \n OAuth 2.0 Bearer Token \n \n \n Basic authentication \n \n \n FAQ \n \n \n API reference \n \n \n \n \n \n \n        Guides contents\n         \n \n \n \n \n \n Log in with Twitter \n \n \n Authentication best practices \n \n \n TLS \n \n \n \n \n \n \n \n Log in with Twitter \n Use Log in with Twitter, also known as Sign in with Twitter, to place a button on your site or application which allows Twitter users to enjoy the benefits of a registered user account in as little as one click. This works on websites, iOS, mobile, and desktop applications. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \u00c2\u00a0 \n Features \n \n \n Ease of use - A new visitor to your site only has to click two buttons in order to log in for the first time. \n Twitter integration - The Log in with Twitter flow can grant authorization to use Twitter APIs on your users' behalf. \n OAuth based - A wealth of client libraries and example code are compatible with the\u00c2\u00a0Log in with Twitter API. \n \n \u00c2\u00a0 \n Available for \n \n Browsers - If your users can access a browser, you can integrate with Log in with Twitter.\u00c2\u00a0Learn about the browser sign in flow. \n Mobile devices - Any web-connected mobile device can take advantage of Log in with Twitter.\u00c2\u00a0Learn about the mobile sign in flow. \n \n \n \n \n \n \n \n \n \n Implementing Log in with Twitter \n \n The\u00c2\u00a0browser\u00c2\u00a0and\u00c2\u00a0mobile web\u00c2\u00a0implementations of Log in with Twitter\u00c2\u00a0are based on OAuth. This page demonstrates the requests needed to obtain an access token for the sign in flow. \n To use the \u00e2\u0080\u009cLog in with Twitter\u00e2\u0080\u009d flow, please go to your\u00c2\u00a0 Twitter\u00c2\u00a0app settings \u00c2\u00a0and ensure that the  \"Allow this app to be used to Sign in with Twitter? \u00e2\u0080\u009d option is enabled. \n This page assumes that the reader knows how to sign requests using the OAuth 1.0a protocol. If you want to know how to sign a request, read the\u00c2\u00a0 Authorizing a request \u00c2\u00a0page. \n If you want to check the signing of the requests on this page, the consumer secret used is:\u00c2\u00a0 L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg . This value is for test purposes and will not work for real requests. \n The three steps for implementing Log in with Twitter through obtaining a request token, redirecting a user, and converting a request token into an access token are listed below. \n \u00c2\u00a0 \n \n \n \n \n \n \n \n \n Step 1 \n \n \n Step 2 \n \n \n Step 3 \n \n \n   \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n            Step 1\n           \n \n            Step 2\n           \n \n            Step 3\n           \n \n \n \n \n \n \n \n \n \n \n \n \n Step 1: Obtaining a request token \n \n To start a sign-in flow, your  Twitter app  must obtain a request token by sending a signed message to\u00c2\u00a0 POST oauth/request_token . The only unique parameter in this request is\u00c2\u00a0 oauth_callback , which must be a URL-encoded version of the URL you wish your user to be redirected to when they complete step 2. The remaining parameters are added by the OAuth signing process. \n \u00c2\u00a0 \n Please note  - Any  callback URL  that you use with the\u00c2\u00a0 POST\u00c2\u00a0oauth/request_token \u00c2\u00a0endpoint will have to be registered within the\u00c2\u00a0 Twitter\u00c2\u00a0app settings \u00c2\u00a0in the  developer portal . \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \u00c2\u00a0 \n Example request (Authorization header has been wrapped): \n \n \n \nPOST /oauth/request_token HTTP/1.1\nUser-Agent: themattharris' HTTP Client\nHost: api.twitter.com\nAccept: */*\nAuthorization:\n        OAuth oauth_callback=\"http%3A%2F%2Flocalhost%2Fsign-in-with-twitter%2F\",\n              oauth_consumer_key=\"cChZNFj6T5R0TigYB9yd1w\",\n              oauth_nonce=\"ea9ec8429b68d6b77cd5600adbbb0456\",\n              oauth_signature=\"F1Li3tvehgcraF8DMJ7OyxO4w9Y%3D\",\n              oauth_signature_method=\"HMAC-SHA1\",\n              oauth_timestamp=\"1318467427\",\n              oauth_version=\"1.0\" \n \n \nYour app should examine the HTTP status of the response. Any value other than\u00c2\u00a0 200 \u00c2\u00a0indicates a failure. The body of the response will contain the\u00c2\u00a0 oauth_token ,\u00c2\u00a0 oauth_token_secret , and\u00c2\u00a0 oauth_callback_confirmed  parameters. Your app should verify that  oauth_callback_confirmed  is\u00c2\u00a0true\u00c2\u00a0and store the other two values for the next steps. \n Example response (response body has been wrapped): \n \n \nHTTP/1.1 200 OK\nDate: Thu, 13 Oct 2011 00:57:06 GMT\nStatus: 200 OK\nContent-Type: text/html; charset=utf-8\nContent-Length: 146\nPragma: no-cache\nExpires: Tue, 31 Mar 1981 05:00:00 GMT\nCache-Control: no-cache, no-store, must-revalidate, pre-check=0, post-check=0\nVary: Accept-Encoding\nServer: tfe\n\noauth_token=NPcudxy0yU5T3tBzho7iCotZ3cnetKwcTIRlX0iwRl0&\noauth_token_secret=veNRnAWe6inFuo8o2u8SLLZLjolYDmDP7SzL0YfYI&\noauth_callback_confirmed=true \n \n \n \n \n \n \n \n \n \n Step 2: Redirecting the user \n The next step is to direct the user to Twitter so that they may complete the appropriate flow, as described in\u00c2\u00a0Browser sign-in flow below. Direct the user to\u00c2\u00a0 GET oauth/authenticate , and the request token obtained in step 1 should be passed as the\u00c2\u00a0 oauth_token\u00c2\u00a0 parameter. \n The most seamless way for a website to implement this would be to issue an HTTP 302 redirect as the response to the original \u00e2\u0080\u009csign in\u00e2\u0080\u009d request. Mobile and desktop apps should open a new browser window or direct to the URL via an embedded web view. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Example URL to redirect to: \n \nhttps://api.twitter.com/oauth/authenticate?oauth_token=NPcudxy0yU5T3tBzho7iCotZ3cnetKwcTIRlX0iwRl0\n \n The sign in endpoint will behave in one of three ways depending on the user\u00e2\u0080\u0099s status: \n \n Signed in and approved : If the user is signed in on twitter.com and has already approved the calling application, they will be immediately authenticated and returned to the callback URL with a valid OAuth request token. The redirect to twitter.com is not obvious to the user. \n Signed in but not approved : If the user is signed in to twitter.com but has not approved the calling application, a request to share access with the calling application will be shown. After accepting the authorization request, the user will be redirected to the callback URL with a valid OAuth request token. \n Not signed in : If the user is not signed in on twitter.com, they will be prompted to enter their credentials and grant access for the application to access their information on the same screen. Once signed in, the user will be returned to the callback URL with a valid OAuth request token. \n \n The possible states for the sign in interaction are illustrated in the following flowchart: \n \u00c2\u00a0 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Upon a successful authentication, your\u00c2\u00a0 callback_url \u00c2\u00a0would receive a request containing the\u00c2\u00a0 oauth_token \u00c2\u00a0and\u00c2\u00a0 oauth_verifier \u00c2\u00a0parameters. Your application should verify that the token matches the request token received in step 1. \n Request from client\u00e2\u0080\u0099s redirect (querystring parameters wrapped): \n \n \n\nGET /sign-in-with-twitter/?\n        oauth_token=NPcudxy0yU5T3tBzho7iCotZ3cnetKwcTIRlX0iwRl0&\n        oauth_verifier=uw7NjWHT6OJ1MpJOXsHfNxoAhPKpgI8BlYDhxEjIBY HTTP/1.1\nHost: localhost\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.5 (KHTML, like Gecko) Chrome/16.0.891.1 Safari/535.5\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nReferer: http://localhost/sign-in-with-twitter/\nAccept-Encoding: gzip,deflate,sdch\nAccept-Language: en-US,en;q=0.8\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3 \n \n \u00c2\u00a0 \n \n \n \n \n \n \n \n \n Step 3: Converting the request token to an access token \n To render the request token into a usable access token, your application must make a request to the\u00c2\u00a0 POST oauth/access_token \u00c2\u00a0endpoint, containing the\u00c2\u00a0 oauth_verifier \u00c2\u00a0value obtained in step 2. The request token is also passed in the\u00c2\u00a0 oauth_token \u00c2\u00a0portion of the header, but this will have been added by the signing process. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Example request (Authorization header wrapped): \n \n \nPOST /oauth/access_token HTTP/1.1\nUser-Agent: themattharris' HTTP Client\nHost: api.twitter.com\nAccept: */*\nAuthorization: OAuth oauth_consumer_key=\"cChZNFj6T5R0TigYB9yd1w\",\n                     oauth_nonce=\"a9900fe68e2573b27a37f10fbad6a755\",\n                     oauth_signature=\"39cipBtIOHEEnybAR4sATQTpl2I%3D\",\n                     oauth_signature_method=\"HMAC-SHA1\",\n                     oauth_timestamp=\"1318467427\",\n                     oauth_token=\"NPcudxy0yU5T3tBzho7iCotZ3cnetKwcTIRlX0iwRl0\",\n                     oauth_version=\"1.0\"\nContent-Length: 57\nContent-Type: application/x-www-form-urlencoded\n\noauth_verifier=uw7NjWHT6OJ1MpJOXsHfNxoAhPKpgI8BlYDhxEjIBY \n \n A successful response contains the\u00c2\u00a0 oauth_token ,\u00c2\u00a0 oauth_token_secret \u00c2\u00a0parameters. The token and token secret should be stored and used for future authenticated requests to the Twitter API. To determine the identity of the user, use\u00c2\u00a0 GET account/verify_credentials . \n Example response (response body has been wrapped): \n \n \n\nHTTP/1.1 200 OK\nDate: Thu, 13 Oct 2011 00:57:08 GMT\nStatus: 200 OK\nContent-Type: text/html; charset=utf-8\nContent-Length: 157\nPragma: no-cache\nExpires: Tue, 31 Mar 1981 05:00:00 GMT\nCache-Control: no-cache, no-store, must-revalidate, pre-check=0, post-check=0\nVary: Accept-Encoding\nServer: tfe\n\noauth_token=7588892-kagSNqWge8gB1WwE3plnFsJHAZVfxWD7Vb57p0b4&\noauth_token_secret=PbKfYqSryyeKDWz4ebtY3o5ogNLG11WJuZBc9fQrQo \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Additional resources \n \n \n Browser sign in flow \n \n \n  Mobile sign in flow \n \n \n   \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n            Additional resources\n           \n \n            Browser sign in flow\n           \n \n             Mobile sign in flow\n           \n \n \n \n \n \n \n \n \n \n \n \n \n Log in with Twitter Resources \n Client libraries \n \n The client libraries listed at  Twitter libraries  will help implement Log in with Twitter. Use the /oauth/authenticate endpoint, as described in the previous steps. \n \u00c2\u00a0 \n Buttons \n Twitter would prefer your application to use the following buttons for consistent branding. Save these images to host on your own servers. \n Sign in with Twitter (button style): \n \u00c2\u00a0 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \u00c2\u00a0 \n \nSign in with Twitter (link style): \n \u00c2\u00a0 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n The browser log in flow is appropriate for websites and applications which are able to open or embed a web browser. At a very high level: \n \u00c2\u00a0 \n \n The application renders a \u00e2\u0080\u009cSign in with Twitter\u00e2\u0080\u009d link or button. \n The user clicks the sign in button. \n The current web browser is redirected to Twitter (or a new browser is opened and directed to Twitter). \n The user completes a login and authorization step at Twitter if needed. \n Twitter redirects back to an URL under the application\u00e2\u0080\u0099s control, passing authorization information for the user. \n \n \u00c2\u00a0 \n Twitter keeps track of the authorizations, so for users already signed in to twitter.com who have authorized the application, no UI is shown - instead, they are automatically redirected back to the application. \n \u00c2\u00a0 \n Desktop flow \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \u00c2\u00a0 \n To demonstrate the flows, pretend the website pictured above (\u00e2\u0080\u009cThe greatest website ever created\u00e2\u0080\u009d) has implemented this API, as shown by the Sign in with Twitter button on the landing page. \n When the user clicks the Sign in button, the page they see depends on whether they are signed in and whether they have previously allowed the application to access their account. \n When\u00c2\u00a0the user is signed in to twitter.com but has not granted access, a list of requested permissions, along with Sign In and Cancel buttons are shown. \n When\u00c2\u00a0the user is not signed in to twitter.com\u00c2\u00a0input fields for a username and password will be shown. Note that even if the user has already granted access to the application, the list of permissions will still be shown. \n \u00c2\u00a0 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \u00c2\u00a0 \n After the user inputs valid credentials (if needed) and clicks \u00e2\u0080\u009cSign In\u00e2\u0080\u009d, Twitter will redirect the user to the website which started the sign in flow. \n \n In the case where\u00c2\u00a0the user is already signed in to twitter.com and has granted access to the website, this redirect happens immediately. \n \n \n \n \n \n \n \n \n The UI flow for mobile web browsers works exactly like the Browser sign in flow, but is optimized for mobile browsers. \n Below are screenshots for the signed in, signed out, and redirect screens: \n \u00c2\u00a0 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Was this document helpful? \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Thank you for the feedback. We\u00e2\u0080\u0099re really glad we could help! \n \n \n \n \n Thank you for the feedback. How could we improve this document? \n \n \n \n \n \n \n This page is missing information. \n \n \n \n \n The information was hard to follow or confusing. \n \n \n \n \n There is inaccurate information. \n \n \n \n \n There is a broken link or typo. \n \n \n \n Specific Feedback \n \n \n \n \n \n Submit feedback \n Skip \n \n \n \n \n \n \n \n Thank you for the feedback. Your comments will help us improve our documents in the future. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n            Developer policy and terms\n           \n \n \n \n            Follow @twitterdev\n           \n \n \n \n \n    Subscribe to developer news\n\n    \n    \n\n    \n    \n   \n \n \n \n \n \n \n \n \n \n \n \n \n \n              Twitter platform\n               \n \n \n \n \n \n \n \n \n                  Twitter.com\n                 \n \n \n \n                  Status\n                 \n \n \n \n                  Card validator\n                 \n \n \n \n                  Privacy Center\n                 \n \n \n \n                  Transparency Center\n                 \n \n \n \n \n \n              Twitter, Inc.\n               \n \n \n \n \n \n \n \n \n                  About the company\n                 \n \n \n \n                  Twitter for Good\n                 \n \n \n \n                  Company news\n                 \n \n \n \n                  Brand toolkit\n                 \n \n \n \n                  Jobs and internships\n                 \n \n \n \n                  Investors\n                 \n \n \n \n \n \n              Help\n               \n \n \n \n \n \n \n \n \n                  Help Center\n                 \n \n \n \n                  Using Twitter\n                 \n \n \n \n                  Twitter Media\n                 \n \n \n \n                  Ads Help Center\n                 \n \n \n \n                  Managing your account\n                 \n \n \n \n                  Safety and security\n                 \n \n \n \n                  Rules and policies\n                 \n \n \n \n                  Contact us\n                 \n \n \n \n \n \n              Developer resources\n               \n \n \n \n \n \n \n \n \n                  Developer home\n                 \n \n \n \n                  Documentation\n                 \n \n \n \n                  Forums\n                 \n \n \n \n                  Communities\n                 \n \n \n \n                  Developer blog\n                 \n \n \n \n                  Engineering blog\n                 \n \n \n \n                  Developer terms\n                 \n \n \n \n \n \n              Business resources\n               \n \n \n \n \n \n \n \n \n                  Advertise\n                 \n \n \n \n                  Twitter for business\n                 \n \n \n \n                  Resources and guides\n                 \n \n \n \n                  Twitter for marketers\n                 \n \n \n \n                  Marketing insights\n                 \n \n \n \n                  Brand inspiration\n                 \n \n \n \n                  Twitter Data\n                 \n \n \n \n                  Twitter Flight School\n                 \n \n \n \n \n \n \n \n \n \n              \u00a9 2021 Twitter, Inc.\n             \n \n \n \n                Cookies\n               \n \n \n \n                Privacy\n               \n \n \n \n                Terms and conditions\n               \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n            By using Twitter\u00e2\u0080\u0099s services you agree to our  Cookies Use . We use cookies for purposes including analytics, personalisation, and ads.\n\n           \n \n \n \n OK \n \n \n \n \n \n \n \n \n \n \n \n \n            This page and certain other Twitter sites place and read third party cookies on your browser that are used for non-essential purposes including targeting of ads.\u00a0Through these cookies,  Google ,  LinkedIn  and  Demandbase  collect personal data about you for their own purposes.\u00a0 Learn more . \n \n \n \n \n Accept \n Decline \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n"
}